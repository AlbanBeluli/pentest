import dns.resolver
import whois
from datetime import datetime

def get_domain_info(domain):
    """Fetch WHOIS, Nameservers, and MX information for a given domain."""
    info = {
        "domain": domain,
        "whois": None,
        "nameservers": [],
        "mail_exchangers": []
    }

    try:
        # Fetch WHOIS Information
        whois_info = whois.whois(domain)
        info['whois'] = {
            'registrar': whois_info.registrar,
            'creation_date': whois_info.creation_date,
            'expiration_date': whois_info.expiration_date
        }

        # Fetch Nameservers
        ns_records = dns.resolver.resolve(domain, 'NS')
        info['nameservers'] = [str(rdata) for rdata in ns_records]

        # Fetch Mail Exchangers
        mx_records = dns.resolver.resolve(domain, 'MX', search=True)
        info['mail_exchangers'] = [str(rdata) for rdata in mx_records]

    except Exception as e:
        print(f"An error occurred while retrieving data for {domain}: {e}")

    return info

def generate_html(domain_info):
    """Generate HTML content from domain info with additional text."""
    html_content = f"""
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Domain Information for {domain_info['domain']}</title>
        <style>
            body {{ font-family: Arial, sans-serif; }}
            h1 {{ color: #333; }}
            h2 {{ color: #666; }}
            ul {{ list-style-type: none; padding: 0; }}
            li {{ margin-bottom: 5px; }}
        </style>
    </head>
    <body>
        <h1>Domain Information for {domain_info['domain']}</h1>
        <h2>WHOIS Information:</h2>
        <ul>
            <li>Registrar: {domain_info['whois']['registrar'] if domain_info['whois'] else 'Not Available'}</li>
            <li>Creation Date: {domain_info['whois']['creation_date'] if domain_info['whois'] else 'Not Available'}</li>
            <li>Expiration Date: {domain_info['whois']['expiration_date'] if domain_info['whois'] else 'Not Available'}</li>
        </ul>
        <h2>Nameservers:</h2>
        <ul>
            {''.join(f'<li>{ns}</li>' for ns in domain_info['nameservers'])}
        </ul>
        <h2>Mail Exchangers:</h2>
        <ul>
            {''.join(f'<li>{mx}</li>' for mx in domain_info['mail_exchangers'])}
        </ul>
        <p>Generated on: {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}</p>
        <hr>
        <p style="text-align:center;">Penetration test by Alban Beluli <a href="www.xqqq.pro">www.xqqq.pro</a></p>
    </body>
    </html>
    """
    return html_content

def main():
    while True:
        domain = input("Enter the domain name (must not include www. or http://): ")
        
        if not domain:
            print("You must enter a domain name to proceed.")
            continue

        try:
            # Validate domain by trying to get WHOIS info. If it fails, the domain might be invalid.
            whois.whois(domain)
            break
        except whois.parser.PywhoisError:
            print("Please enter a valid domain name.")

    domain_info = get_domain_info(domain)
    
    html_content = generate_html(domain_info)
    
    with open(f"{domain}_info.html", "w") as file:
        file.write(html_content)
    
    print(f"Domain information has been saved to {domain}_info.html")

if __name__ == "__main__":
    main()
