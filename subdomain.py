import subprocess
import os
import time

def run_command(command):
    process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)
    stdout, stderr = process.communicate()
    return stdout.decode(), stderr.decode()

def whois_query(domain):
    return run_command(f"whois {domain}")

def nslookup_query(domain):
    return run_command(f"nslookup {domain}")

def nmap_scan(domain):
    return run_command(f"nmap -sT -A -vv {domain}")

def theharvester(domain):
    return run_command(f"theharvester -d {domain} -b google -l 500 -f theharvester_results.html")

def dnsrecon(domain):
    return run_command(f"dnsrecon -d {domain} -t axfr")

def dnsmap(domain):
    return run_command(f"dnsmap {domain}")

def wafw00f(domain):
    return run_command(f"wafw00f {domain}")

def nikto_scan(domain):
    return run_command(f"nikto -h {domain}")

def sslscan(domain):
    return run_command(f"sslscan {domain}")

def generate_html(domain, results):
    html_content = f"""
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="description" content="Penetration test report for {domain} by Alban Beluli">
        <meta name="author" content="Alban Beluli">
        <title>Pentest Report for {domain}</title>
        <style>
            body {{
                font-family: Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                background-color: #f4f4f4;
            }}
            h1, h2 {{
                color: #2c3e50;
            }}
            pre {{
                background-color: #e9ecef;
                padding: 10px;
                border-radius: 4px;
                overflow-x: auto;
                white-space: pre-wrap;
                font-family: 'Courier New', monospace;
                font-size: 14px;
                line-height: 1.5;
            }}
            a {{
                color: #3498db;
                text-decoration: none;
            }}
            a:hover {{
                text-decoration: underline;
                color: #2980b9;
            }}
            hr {{
                border: 0;
                height: 1px;
                background-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.75), rgba(0, 0, 0, 0));
            }}
            @media (max-width: 768px) {{
                body {{
                    padding: 0 10px;
                }}
                h1, h2 {{
                    font-size: 1.5em;
                }}
                pre {{
                    font-size: 0.9em;
                }}
            }}
        </style>
    </head>
    <body>
        <h1>Pentest Report for {domain}</h1>
        {results}
        <hr>
        <p>Pentest by Alban Beluli, Penetration Tester <a href="www.xqqq.pro">www.xqqq.pro</a></p>
    </body>
    </html>
    """
    with open(f"pentest_report_{domain.replace('.', '_')}.html", 'w') as f:
        f.write(html_content)

def main():
    domain = input("Enter the domain to scan: ")
    results = ""

    # WHOIS
    whois_result, _ = whois_query(domain)
    results += f"<h2>WHOIS Data</h2><pre>{whois_result}</pre>"

    # nslookup
    nslookup_result, _ = nslookup_query(domain)
    results += f"<h2>nslookup Results</h2><pre>{nslookup_result}</pre>"

    # nmap
    nmap_result, _ = nmap_scan(domain)
    results += f"<h2>Nmap Scan</h2><pre>{nmap_result}</pre>"

    # theHarvester
    _, _ = theharvester(domain)
    results += f'<h2>TheHarvester Results</h2><a href="theharvester_results.html">View TheHarvester Results</a>'

    # dnsrecon, dnsmap, wafw00f, nikto, sslscan
    for tool, command in [
        ("dnsrecon", dnsrecon),
        ("dnsmap", dnsmap),
        ("wafw00f", wafw00f),
        ("nikto", nikto_scan),
        ("sslscan", sslscan)
    ]:
        tool_result, _ = command(domain)
        results += f"<h2>{tool.capitalize()} Results</h2><pre>{tool_result}</pre>"

    generate_html(domain, results)
    print(f"Scan completed. Results saved in pentest_report_{domain.replace('.', '_')}.html")

if __name__ == "__main__":
    main()
